@{
    ViewData["Title"] = "Home Page";
}
<style >
    #live {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        background-color: #000;
        display: none;
    }
    #local-video {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 250px;
        -webkit-transform: scaleX(-1);
        transform: scaleX(-1);
        margin: 16px;
        border: 2px solid #fff;
    }
    #remote-video {
        position: absolute;
        max-width: 100%;
        height: 100%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
    #end-call {
        position: absolute;
        bottom: 0;
        right: 0;
        padding: 8px;
        background-color: red;
        color: white;
        border: none;
        margin: 16px;
    }
</style>
<div class="text-center">
   
    <video id="remote-video"></video>
    <video id="local-video" muted="true"></video>
    <button id="end-call" onclick="endCall()">End Call</button>

</div>

@section Scripts
{
    <script>
        const peer = new Peer();
        var currentCall;

//        // get the id entered by the user
//        const peerId = document.querySelector("input").value;
//// grab the camera and mic
//        const stream = await navigator.mediaDevices.getUserMedia({
//            video: true,
//            audio: true,
//        });
//// switch to the video call and play the camera preview
//        document.getElementById("menu").style.display = "none";
//        document.getElementById("live").style.display = "block";
//        document.getElementById("local-video").srcObject = stream;
//        document.getElementById("local-video").play();
//// make the call
//        const call = peer.call(peerId, stream);
//        call.on("stream", (stream) => {
//            document.getElementById("remote-video").srcObject = stream;
//            document.getElementById("remote-video").play();
//        });
//        call.on("data", (stream) => {
//            document.querySelector("#remote-video").srcObject = stream;
//        });
//        call.on("error", (err) => {
//            console.log(err);
//        });
//        call.on('close', () => {
//            endCall()
//        })
//// save the close function
//        currentCall = call;


        var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
        getUserMedia({video: true, audio: true}, function(stream) {
            var call = peer.call('another-peers-id', stream);
            call.on('stream', function(remoteStream) {
                document.getElementById("remote-video").srcObject = stream;
                document.getElementById("remote-video").play();
            });
        }, function(err) {
            console.log('Failed to get local stream' ,err);
        });


    </script>
     
}
